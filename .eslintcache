[{"/Users/umaibalendra/Documents/factcheck/src/index.js":"1","/Users/umaibalendra/Documents/factcheck/src/App.js":"2","/Users/umaibalendra/Documents/factcheck/src/reportWebVitals.js":"3","/Users/umaibalendra/Documents/factcheck/src/server/twitter.js":"4"},{"size":500,"mtime":1610822284958,"results":"5","hashOfConfig":"6"},{"size":4969,"mtime":1610864827710,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1610822284959,"results":"8","hashOfConfig":"6"},{"size":350,"mtime":1610856330202,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"pcvx4n",{"filePath":"13","messages":"14","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/umaibalendra/Documents/factcheck/src/index.js",[],["20","21"],"/Users/umaibalendra/Documents/factcheck/src/App.js",["22","23","24","25","26","27","28","29","30","31"],"/*global chrome*/\nimport \"./App.css\";\nimport axios from 'axios';\nimport React, {useEffect, useState} from 'react';\nimport newspaper from \"./newspaper.png\"\nimport { getTweetByID } from \"./server/twitter.js\"; \nimport ProgressBar from '@ramonak/react-progress-bar';\n\nfunction App() {\n\n  let tweetIDTest = '1350246702989549570'\n  const [verifiedClaims, setVerifiedClaims] = useState([]); //mesha u can use this array of claims to render their urls on screen!\n  const [percentTrue, setPercentTrue] = useState(0);\n  const [percentFalse, setPercentFalse] = useState(0);\n  const [tweetData, setTweetData] = useState('');\n\n  useEffect(() => {\n    getUrl();\n  }, []);\n\n  const getUrl = () => {\n    chrome.tabs.query({active: true, currentWindow: true}, async (tabs) => {\n      let claims = [];\n      let tweetID = '';\n      let tweetData = '';\n      let url = tabs[0].url;\n\n      if(url.includes('status')){\n        tweetID = url.slice(url.length - 19)\n        \n        tweetData = await getTweetByID(tweetID); // doop\n        setTweetData(tweetData.text);\n        console.log('tweet from front end: ', tweetData.text);\n\n        claims = await getFactData(tweetData.text);\n        console.log('claims from front end: ', claims);\n      }\n    });\n  }\n\n  const getFactData = (query) => {\n    console.log(`Making API call to:\\n\\nhttps://factchecktools.googleapis.com/v1alpha1/claims:search?key=${process.env.REACT_APP_GOOGLE_API_KEY}&query=trump did 9/11`)\n    axios.get(`https://factchecktools.googleapis.com/v1alpha1/claims:search?key=${process.env.REACT_APP_GOOGLE_API_KEY}&languageCode=en-US&query=${query}`).\n      then((data) => {\n        console.log('data: ', data);\n        console.log('claims: ', data.data.claims);\n        var trueCount = 0;\n        var falseCount = 0;\n        var totalSourceCount = 0;\n        var returnedClaims = (data.data.claims);\n        var relevantClaims = []; //stores only False or True claims\n\n        if (returnedClaims.length != 0) { //grab only False or True-rated claims if array is populated\n          returnedClaims.forEach((arrayItem) => {\n            if (arrayItem.claimReview[0].textualRating == (\"False\") || arrayItem.claimReview[0].textualRating == (\"True\")) {\n              relevantClaims.push(arrayItem.claimReview[0]);\n              setVerifiedClaims(verifiedClaims => [...verifiedClaims, arrayItem.claimReview[0]]);\n              console.log(\"Source Name: \" + arrayItem.claimReview[0].publisher.name);\n              console.log(\"Date Article Was Posted: \" + arrayItem.claimDate);\n            }\n          });\n\n          relevantClaims.forEach((claim) => { //go through filtered claims and return textualRating Website\n            if (claim.textualRating == \"True\") {\n              trueCount+= 1;\n            } else if (claim.textualRating == \"False\") {\n              falseCount+= 1;\n            }\n          });\n\n          totalSourceCount = trueCount + falseCount;\n          setPercentTrue(trueCount/totalSourceCount * 100);\n          setPercentFalse(falseCount/totalSourceCount * 100);\n          console.log(\"Based on \" + totalSourceCount + \" sources, this claim is \" + trueCount + \" true \" + falseCount + \" false.\");\n          console.log('percent true: ', trueCount/totalSourceCount * 100, 'percent false: ', falseCount/totalSourceCount * 100)\n        } else { //no claims in array\n          console.log(\"We couldn't find any results, sorry about that\");\n        }\n\n      }).catch((e) => {\n        console.log('BIG F WE GOT ANOTHER ERROR: ', e);\n      });\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"topHalf\">\n        <div className=\"title\">Fact Checker</div>\n        <div className=\"false-info\">False Information Detected in this tweet</div>\n        <div className=\"progress-bars\">\n          <div className=\"single-progress-bar\">True</div>\n          <ProgressBar width={'85%'} height={'15px'} completed={percentTrue} bgcolor={'#5DB075'} labelColor={'#000000'} margin={'2px'}/>\n\n          <div className=\"single-progress-bar\">False</div>\n          <ProgressBar width={'85%'} height={'15px'} completed={percentFalse} bgcolor={'#F38016'} labelColor={'#000000'} margin={'2px'}/>\n        </div>\n      </div>\n      <div className=\"line\">--------------------------------------</div>\n      <div className=\"topHalf\">\n        <div className=\"row-newspaper\">\n          <img src={newspaper} className='newspaper'/>\n          Top Result\n        </div>\n        \n        <div className=\"row-profile\">\n          <div className=\"profile\">\n            S\n          </div>\n          <div className=\"column-profile\">\n            <div className=\"row-mini\">Result: {percentTrue >= percentFalse ? <div className=\"true\">True</div> : <div className=\"false\">False</div>}</div>\n            <div className=\"claim\">Claim: {tweetData}</div>\n            <button className=\"url-button\" onClick={console.log(\"pressed the url button\")}>Find Out Why</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/umaibalendra/Documents/factcheck/src/reportWebVitals.js",[],"/Users/umaibalendra/Documents/factcheck/src/server/twitter.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":11,"column":7,"nodeType":"38","messageId":"39","endLine":11,"endColumn":18},{"ruleId":"36","severity":1,"message":"40","line":12,"column":10,"nodeType":"38","messageId":"39","endLine":12,"endColumn":24},{"ruleId":"41","severity":1,"message":"42","line":19,"column":6,"nodeType":"43","endLine":19,"endColumn":8,"suggestions":"44"},{"ruleId":"45","severity":1,"message":"46","line":43,"column":156,"nodeType":"47","messageId":"48","endLine":43,"endColumn":157,"fix":"49"},{"ruleId":"50","severity":1,"message":"51","line":53,"column":35,"nodeType":"52","messageId":"53","endLine":53,"endColumn":37},{"ruleId":"50","severity":1,"message":"54","line":55,"column":56,"nodeType":"52","messageId":"53","endLine":55,"endColumn":58},{"ruleId":"50","severity":1,"message":"54","line":55,"column":111,"nodeType":"52","messageId":"53","endLine":55,"endColumn":113},{"ruleId":"50","severity":1,"message":"54","line":64,"column":37,"nodeType":"52","messageId":"53","endLine":64,"endColumn":39},{"ruleId":"50","severity":1,"message":"54","line":66,"column":44,"nodeType":"52","messageId":"53","endLine":66,"endColumn":46},{"ruleId":"55","severity":1,"message":"56","line":101,"column":11,"nodeType":"57","endLine":101,"endColumn":55},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'tweetIDTest' is assigned a value but never used.","Identifier","unusedVar","'verifiedClaims' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUrl'. Either include it or remove the dependency array.","ArrayExpression",["60"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"61","text":"62"},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},[1598,1606],"\n      .","Update the dependencies array to be: [getUrl]",{"range":"65","text":"66"},[653,655],"[getUrl]"]